({
  Entity: {
    note: 'A parking spot for single electric vehicle',
  },
  /* Metarhia does not support UUID for primary key.
    That's intentional decision due to performance concerns.
    So in the case of UUID needed you must declare separate field (e.g. `guid`)
    to hold generated identifier and mark it as unique. */

  /**
   * Universally unique identifier for cross-system or public communication about the entity.
   * Used as a separate ID key only!
   * All internal entity references uses primary generated as identity key of type BigInt.
   */
  guid: {
    /** Custom type: autogenerated by Postgres UUID */
    type: 'genUUID',
    unique: true,
  },
  parking: { type: 'Parking', delete: 'cascade' },
  floor: 'number',
  place: 'number',
  cost: 'double',
  available: { type: '?boolean', default: true },
  suitableFor: {
    //Custom type to describe array of enumerable strings
    type: 'vehicleKindArray',
  },
  chargers: { many: 'ElectricCharger' },
  ports: { many: 'ChargingPort' },

  // Define combined unique index
  naturalKey: { unique: ['parking', 'place'] },
});
